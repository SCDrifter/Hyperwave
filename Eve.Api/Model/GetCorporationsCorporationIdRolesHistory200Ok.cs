/* 
 * EVE Swagger Interface
 *
 * An OpenAPI for EVE Online
 *
 * OpenAPI spec version: 1.2.9
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Eve.Api.Client.SwaggerDateConverter;

namespace Eve.Api.Model
{
    /// <summary>
    /// 200 ok object
    /// </summary>
    [DataContract]
    public partial class GetCorporationsCorporationIdRolesHistory200Ok :  IEquatable<GetCorporationsCorporationIdRolesHistory200Ok>, IValidatableObject
    {

        /// <summary>
        /// new_role string
        /// </summary>
        /// <value>new_role string</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum NewRolesEnum
        {
            
            /// <summary>
            /// Enum AccountTake1 for "Account_Take_1"
            /// </summary>
            [EnumMember(Value = "Account_Take_1")]
            AccountTake1,
            
            /// <summary>
            /// Enum AccountTake2 for "Account_Take_2"
            /// </summary>
            [EnumMember(Value = "Account_Take_2")]
            AccountTake2,
            
            /// <summary>
            /// Enum AccountTake3 for "Account_Take_3"
            /// </summary>
            [EnumMember(Value = "Account_Take_3")]
            AccountTake3,
            
            /// <summary>
            /// Enum AccountTake4 for "Account_Take_4"
            /// </summary>
            [EnumMember(Value = "Account_Take_4")]
            AccountTake4,
            
            /// <summary>
            /// Enum AccountTake5 for "Account_Take_5"
            /// </summary>
            [EnumMember(Value = "Account_Take_5")]
            AccountTake5,
            
            /// <summary>
            /// Enum AccountTake6 for "Account_Take_6"
            /// </summary>
            [EnumMember(Value = "Account_Take_6")]
            AccountTake6,
            
            /// <summary>
            /// Enum AccountTake7 for "Account_Take_7"
            /// </summary>
            [EnumMember(Value = "Account_Take_7")]
            AccountTake7,
            
            /// <summary>
            /// Enum Accountant for "Accountant"
            /// </summary>
            [EnumMember(Value = "Accountant")]
            Accountant,
            
            /// <summary>
            /// Enum Auditor for "Auditor"
            /// </summary>
            [EnumMember(Value = "Auditor")]
            Auditor,
            
            /// <summary>
            /// Enum CommunicationsOfficer for "Communications_Officer"
            /// </summary>
            [EnumMember(Value = "Communications_Officer")]
            CommunicationsOfficer,
            
            /// <summary>
            /// Enum ConfigEquipment for "Config_Equipment"
            /// </summary>
            [EnumMember(Value = "Config_Equipment")]
            ConfigEquipment,
            
            /// <summary>
            /// Enum ConfigStarbaseEquipment for "Config_Starbase_Equipment"
            /// </summary>
            [EnumMember(Value = "Config_Starbase_Equipment")]
            ConfigStarbaseEquipment,
            
            /// <summary>
            /// Enum ContainerTake1 for "Container_Take_1"
            /// </summary>
            [EnumMember(Value = "Container_Take_1")]
            ContainerTake1,
            
            /// <summary>
            /// Enum ContainerTake2 for "Container_Take_2"
            /// </summary>
            [EnumMember(Value = "Container_Take_2")]
            ContainerTake2,
            
            /// <summary>
            /// Enum ContainerTake3 for "Container_Take_3"
            /// </summary>
            [EnumMember(Value = "Container_Take_3")]
            ContainerTake3,
            
            /// <summary>
            /// Enum ContainerTake4 for "Container_Take_4"
            /// </summary>
            [EnumMember(Value = "Container_Take_4")]
            ContainerTake4,
            
            /// <summary>
            /// Enum ContainerTake5 for "Container_Take_5"
            /// </summary>
            [EnumMember(Value = "Container_Take_5")]
            ContainerTake5,
            
            /// <summary>
            /// Enum ContainerTake6 for "Container_Take_6"
            /// </summary>
            [EnumMember(Value = "Container_Take_6")]
            ContainerTake6,
            
            /// <summary>
            /// Enum ContainerTake7 for "Container_Take_7"
            /// </summary>
            [EnumMember(Value = "Container_Take_7")]
            ContainerTake7,
            
            /// <summary>
            /// Enum ContractManager for "Contract_Manager"
            /// </summary>
            [EnumMember(Value = "Contract_Manager")]
            ContractManager,
            
            /// <summary>
            /// Enum Diplomat for "Diplomat"
            /// </summary>
            [EnumMember(Value = "Diplomat")]
            Diplomat,
            
            /// <summary>
            /// Enum Director for "Director"
            /// </summary>
            [EnumMember(Value = "Director")]
            Director,
            
            /// <summary>
            /// Enum FactoryManager for "Factory_Manager"
            /// </summary>
            [EnumMember(Value = "Factory_Manager")]
            FactoryManager,
            
            /// <summary>
            /// Enum FittingManager for "Fitting_Manager"
            /// </summary>
            [EnumMember(Value = "Fitting_Manager")]
            FittingManager,
            
            /// <summary>
            /// Enum HangarQuery1 for "Hangar_Query_1"
            /// </summary>
            [EnumMember(Value = "Hangar_Query_1")]
            HangarQuery1,
            
            /// <summary>
            /// Enum HangarQuery2 for "Hangar_Query_2"
            /// </summary>
            [EnumMember(Value = "Hangar_Query_2")]
            HangarQuery2,
            
            /// <summary>
            /// Enum HangarQuery3 for "Hangar_Query_3"
            /// </summary>
            [EnumMember(Value = "Hangar_Query_3")]
            HangarQuery3,
            
            /// <summary>
            /// Enum HangarQuery4 for "Hangar_Query_4"
            /// </summary>
            [EnumMember(Value = "Hangar_Query_4")]
            HangarQuery4,
            
            /// <summary>
            /// Enum HangarQuery5 for "Hangar_Query_5"
            /// </summary>
            [EnumMember(Value = "Hangar_Query_5")]
            HangarQuery5,
            
            /// <summary>
            /// Enum HangarQuery6 for "Hangar_Query_6"
            /// </summary>
            [EnumMember(Value = "Hangar_Query_6")]
            HangarQuery6,
            
            /// <summary>
            /// Enum HangarQuery7 for "Hangar_Query_7"
            /// </summary>
            [EnumMember(Value = "Hangar_Query_7")]
            HangarQuery7,
            
            /// <summary>
            /// Enum HangarTake1 for "Hangar_Take_1"
            /// </summary>
            [EnumMember(Value = "Hangar_Take_1")]
            HangarTake1,
            
            /// <summary>
            /// Enum HangarTake2 for "Hangar_Take_2"
            /// </summary>
            [EnumMember(Value = "Hangar_Take_2")]
            HangarTake2,
            
            /// <summary>
            /// Enum HangarTake3 for "Hangar_Take_3"
            /// </summary>
            [EnumMember(Value = "Hangar_Take_3")]
            HangarTake3,
            
            /// <summary>
            /// Enum HangarTake4 for "Hangar_Take_4"
            /// </summary>
            [EnumMember(Value = "Hangar_Take_4")]
            HangarTake4,
            
            /// <summary>
            /// Enum HangarTake5 for "Hangar_Take_5"
            /// </summary>
            [EnumMember(Value = "Hangar_Take_5")]
            HangarTake5,
            
            /// <summary>
            /// Enum HangarTake6 for "Hangar_Take_6"
            /// </summary>
            [EnumMember(Value = "Hangar_Take_6")]
            HangarTake6,
            
            /// <summary>
            /// Enum HangarTake7 for "Hangar_Take_7"
            /// </summary>
            [EnumMember(Value = "Hangar_Take_7")]
            HangarTake7,
            
            /// <summary>
            /// Enum JuniorAccountant for "Junior_Accountant"
            /// </summary>
            [EnumMember(Value = "Junior_Accountant")]
            JuniorAccountant,
            
            /// <summary>
            /// Enum PersonnelManager for "Personnel_Manager"
            /// </summary>
            [EnumMember(Value = "Personnel_Manager")]
            PersonnelManager,
            
            /// <summary>
            /// Enum RentFactoryFacility for "Rent_Factory_Facility"
            /// </summary>
            [EnumMember(Value = "Rent_Factory_Facility")]
            RentFactoryFacility,
            
            /// <summary>
            /// Enum RentOffice for "Rent_Office"
            /// </summary>
            [EnumMember(Value = "Rent_Office")]
            RentOffice,
            
            /// <summary>
            /// Enum RentResearchFacility for "Rent_Research_Facility"
            /// </summary>
            [EnumMember(Value = "Rent_Research_Facility")]
            RentResearchFacility,
            
            /// <summary>
            /// Enum SecurityOfficer for "Security_Officer"
            /// </summary>
            [EnumMember(Value = "Security_Officer")]
            SecurityOfficer,
            
            /// <summary>
            /// Enum StarbaseDefenseOperator for "Starbase_Defense_Operator"
            /// </summary>
            [EnumMember(Value = "Starbase_Defense_Operator")]
            StarbaseDefenseOperator,
            
            /// <summary>
            /// Enum StarbaseFuelTechnician for "Starbase_Fuel_Technician"
            /// </summary>
            [EnumMember(Value = "Starbase_Fuel_Technician")]
            StarbaseFuelTechnician,
            
            /// <summary>
            /// Enum StationManager for "Station_Manager"
            /// </summary>
            [EnumMember(Value = "Station_Manager")]
            StationManager,
            
            /// <summary>
            /// Enum Trader for "Trader"
            /// </summary>
            [EnumMember(Value = "Trader")]
            Trader
        }


        /// <summary>
        /// old_role string
        /// </summary>
        /// <value>old_role string</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum OldRolesEnum
        {
            
            /// <summary>
            /// Enum AccountTake1 for "Account_Take_1"
            /// </summary>
            [EnumMember(Value = "Account_Take_1")]
            AccountTake1,
            
            /// <summary>
            /// Enum AccountTake2 for "Account_Take_2"
            /// </summary>
            [EnumMember(Value = "Account_Take_2")]
            AccountTake2,
            
            /// <summary>
            /// Enum AccountTake3 for "Account_Take_3"
            /// </summary>
            [EnumMember(Value = "Account_Take_3")]
            AccountTake3,
            
            /// <summary>
            /// Enum AccountTake4 for "Account_Take_4"
            /// </summary>
            [EnumMember(Value = "Account_Take_4")]
            AccountTake4,
            
            /// <summary>
            /// Enum AccountTake5 for "Account_Take_5"
            /// </summary>
            [EnumMember(Value = "Account_Take_5")]
            AccountTake5,
            
            /// <summary>
            /// Enum AccountTake6 for "Account_Take_6"
            /// </summary>
            [EnumMember(Value = "Account_Take_6")]
            AccountTake6,
            
            /// <summary>
            /// Enum AccountTake7 for "Account_Take_7"
            /// </summary>
            [EnumMember(Value = "Account_Take_7")]
            AccountTake7,
            
            /// <summary>
            /// Enum Accountant for "Accountant"
            /// </summary>
            [EnumMember(Value = "Accountant")]
            Accountant,
            
            /// <summary>
            /// Enum Auditor for "Auditor"
            /// </summary>
            [EnumMember(Value = "Auditor")]
            Auditor,
            
            /// <summary>
            /// Enum CommunicationsOfficer for "Communications_Officer"
            /// </summary>
            [EnumMember(Value = "Communications_Officer")]
            CommunicationsOfficer,
            
            /// <summary>
            /// Enum ConfigEquipment for "Config_Equipment"
            /// </summary>
            [EnumMember(Value = "Config_Equipment")]
            ConfigEquipment,
            
            /// <summary>
            /// Enum ConfigStarbaseEquipment for "Config_Starbase_Equipment"
            /// </summary>
            [EnumMember(Value = "Config_Starbase_Equipment")]
            ConfigStarbaseEquipment,
            
            /// <summary>
            /// Enum ContainerTake1 for "Container_Take_1"
            /// </summary>
            [EnumMember(Value = "Container_Take_1")]
            ContainerTake1,
            
            /// <summary>
            /// Enum ContainerTake2 for "Container_Take_2"
            /// </summary>
            [EnumMember(Value = "Container_Take_2")]
            ContainerTake2,
            
            /// <summary>
            /// Enum ContainerTake3 for "Container_Take_3"
            /// </summary>
            [EnumMember(Value = "Container_Take_3")]
            ContainerTake3,
            
            /// <summary>
            /// Enum ContainerTake4 for "Container_Take_4"
            /// </summary>
            [EnumMember(Value = "Container_Take_4")]
            ContainerTake4,
            
            /// <summary>
            /// Enum ContainerTake5 for "Container_Take_5"
            /// </summary>
            [EnumMember(Value = "Container_Take_5")]
            ContainerTake5,
            
            /// <summary>
            /// Enum ContainerTake6 for "Container_Take_6"
            /// </summary>
            [EnumMember(Value = "Container_Take_6")]
            ContainerTake6,
            
            /// <summary>
            /// Enum ContainerTake7 for "Container_Take_7"
            /// </summary>
            [EnumMember(Value = "Container_Take_7")]
            ContainerTake7,
            
            /// <summary>
            /// Enum ContractManager for "Contract_Manager"
            /// </summary>
            [EnumMember(Value = "Contract_Manager")]
            ContractManager,
            
            /// <summary>
            /// Enum Diplomat for "Diplomat"
            /// </summary>
            [EnumMember(Value = "Diplomat")]
            Diplomat,
            
            /// <summary>
            /// Enum Director for "Director"
            /// </summary>
            [EnumMember(Value = "Director")]
            Director,
            
            /// <summary>
            /// Enum FactoryManager for "Factory_Manager"
            /// </summary>
            [EnumMember(Value = "Factory_Manager")]
            FactoryManager,
            
            /// <summary>
            /// Enum FittingManager for "Fitting_Manager"
            /// </summary>
            [EnumMember(Value = "Fitting_Manager")]
            FittingManager,
            
            /// <summary>
            /// Enum HangarQuery1 for "Hangar_Query_1"
            /// </summary>
            [EnumMember(Value = "Hangar_Query_1")]
            HangarQuery1,
            
            /// <summary>
            /// Enum HangarQuery2 for "Hangar_Query_2"
            /// </summary>
            [EnumMember(Value = "Hangar_Query_2")]
            HangarQuery2,
            
            /// <summary>
            /// Enum HangarQuery3 for "Hangar_Query_3"
            /// </summary>
            [EnumMember(Value = "Hangar_Query_3")]
            HangarQuery3,
            
            /// <summary>
            /// Enum HangarQuery4 for "Hangar_Query_4"
            /// </summary>
            [EnumMember(Value = "Hangar_Query_4")]
            HangarQuery4,
            
            /// <summary>
            /// Enum HangarQuery5 for "Hangar_Query_5"
            /// </summary>
            [EnumMember(Value = "Hangar_Query_5")]
            HangarQuery5,
            
            /// <summary>
            /// Enum HangarQuery6 for "Hangar_Query_6"
            /// </summary>
            [EnumMember(Value = "Hangar_Query_6")]
            HangarQuery6,
            
            /// <summary>
            /// Enum HangarQuery7 for "Hangar_Query_7"
            /// </summary>
            [EnumMember(Value = "Hangar_Query_7")]
            HangarQuery7,
            
            /// <summary>
            /// Enum HangarTake1 for "Hangar_Take_1"
            /// </summary>
            [EnumMember(Value = "Hangar_Take_1")]
            HangarTake1,
            
            /// <summary>
            /// Enum HangarTake2 for "Hangar_Take_2"
            /// </summary>
            [EnumMember(Value = "Hangar_Take_2")]
            HangarTake2,
            
            /// <summary>
            /// Enum HangarTake3 for "Hangar_Take_3"
            /// </summary>
            [EnumMember(Value = "Hangar_Take_3")]
            HangarTake3,
            
            /// <summary>
            /// Enum HangarTake4 for "Hangar_Take_4"
            /// </summary>
            [EnumMember(Value = "Hangar_Take_4")]
            HangarTake4,
            
            /// <summary>
            /// Enum HangarTake5 for "Hangar_Take_5"
            /// </summary>
            [EnumMember(Value = "Hangar_Take_5")]
            HangarTake5,
            
            /// <summary>
            /// Enum HangarTake6 for "Hangar_Take_6"
            /// </summary>
            [EnumMember(Value = "Hangar_Take_6")]
            HangarTake6,
            
            /// <summary>
            /// Enum HangarTake7 for "Hangar_Take_7"
            /// </summary>
            [EnumMember(Value = "Hangar_Take_7")]
            HangarTake7,
            
            /// <summary>
            /// Enum JuniorAccountant for "Junior_Accountant"
            /// </summary>
            [EnumMember(Value = "Junior_Accountant")]
            JuniorAccountant,
            
            /// <summary>
            /// Enum PersonnelManager for "Personnel_Manager"
            /// </summary>
            [EnumMember(Value = "Personnel_Manager")]
            PersonnelManager,
            
            /// <summary>
            /// Enum RentFactoryFacility for "Rent_Factory_Facility"
            /// </summary>
            [EnumMember(Value = "Rent_Factory_Facility")]
            RentFactoryFacility,
            
            /// <summary>
            /// Enum RentOffice for "Rent_Office"
            /// </summary>
            [EnumMember(Value = "Rent_Office")]
            RentOffice,
            
            /// <summary>
            /// Enum RentResearchFacility for "Rent_Research_Facility"
            /// </summary>
            [EnumMember(Value = "Rent_Research_Facility")]
            RentResearchFacility,
            
            /// <summary>
            /// Enum SecurityOfficer for "Security_Officer"
            /// </summary>
            [EnumMember(Value = "Security_Officer")]
            SecurityOfficer,
            
            /// <summary>
            /// Enum StarbaseDefenseOperator for "Starbase_Defense_Operator"
            /// </summary>
            [EnumMember(Value = "Starbase_Defense_Operator")]
            StarbaseDefenseOperator,
            
            /// <summary>
            /// Enum StarbaseFuelTechnician for "Starbase_Fuel_Technician"
            /// </summary>
            [EnumMember(Value = "Starbase_Fuel_Technician")]
            StarbaseFuelTechnician,
            
            /// <summary>
            /// Enum StationManager for "Station_Manager"
            /// </summary>
            [EnumMember(Value = "Station_Manager")]
            StationManager,
            
            /// <summary>
            /// Enum Trader for "Trader"
            /// </summary>
            [EnumMember(Value = "Trader")]
            Trader
        }

        /// <summary>
        /// role_type string
        /// </summary>
        /// <value>role_type string</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum RoleTypeEnum
        {
            
            /// <summary>
            /// Enum Grantableroles for "grantable_roles"
            /// </summary>
            [EnumMember(Value = "grantable_roles")]
            Grantableroles,
            
            /// <summary>
            /// Enum Grantablerolesatbase for "grantable_roles_at_base"
            /// </summary>
            [EnumMember(Value = "grantable_roles_at_base")]
            Grantablerolesatbase,
            
            /// <summary>
            /// Enum Grantablerolesathq for "grantable_roles_at_hq"
            /// </summary>
            [EnumMember(Value = "grantable_roles_at_hq")]
            Grantablerolesathq,
            
            /// <summary>
            /// Enum Grantablerolesatother for "grantable_roles_at_other"
            /// </summary>
            [EnumMember(Value = "grantable_roles_at_other")]
            Grantablerolesatother,
            
            /// <summary>
            /// Enum Roles for "roles"
            /// </summary>
            [EnumMember(Value = "roles")]
            Roles,
            
            /// <summary>
            /// Enum Rolesatbase for "roles_at_base"
            /// </summary>
            [EnumMember(Value = "roles_at_base")]
            Rolesatbase,
            
            /// <summary>
            /// Enum Rolesathq for "roles_at_hq"
            /// </summary>
            [EnumMember(Value = "roles_at_hq")]
            Rolesathq,
            
            /// <summary>
            /// Enum Rolesatother for "roles_at_other"
            /// </summary>
            [EnumMember(Value = "roles_at_other")]
            Rolesatother
        }

        /// <summary>
        /// new_roles array
        /// </summary>
        /// <value>new_roles array</value>
        [DataMember(Name="new_roles", EmitDefaultValue=false)]
        public List<NewRolesEnum> NewRoles { get; set; }
        /// <summary>
        /// old_roles array
        /// </summary>
        /// <value>old_roles array</value>
        [DataMember(Name="old_roles", EmitDefaultValue=false)]
        public List<OldRolesEnum> OldRoles { get; set; }
        /// <summary>
        /// role_type string
        /// </summary>
        /// <value>role_type string</value>
        [DataMember(Name="role_type", EmitDefaultValue=false)]
        public RoleTypeEnum? RoleType { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="GetCorporationsCorporationIdRolesHistory200Ok" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected GetCorporationsCorporationIdRolesHistory200Ok() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="GetCorporationsCorporationIdRolesHistory200Ok" /> class.
        /// </summary>
        /// <param name="ChangedAt">changed_at string (required).</param>
        /// <param name="CharacterId">The character whose roles are changed (required).</param>
        /// <param name="IssuerId">ID of the character who issued this change (required).</param>
        /// <param name="NewRoles">new_roles array (required).</param>
        /// <param name="OldRoles">old_roles array (required).</param>
        /// <param name="RoleType">role_type string (required).</param>
        public GetCorporationsCorporationIdRolesHistory200Ok(DateTime? ChangedAt = default(DateTime?), int? CharacterId = default(int?), int? IssuerId = default(int?), List<NewRolesEnum> NewRoles = default(List<NewRolesEnum>), List<OldRolesEnum> OldRoles = default(List<OldRolesEnum>), RoleTypeEnum? RoleType = default(RoleTypeEnum?))
        {
            // to ensure "ChangedAt" is required (not null)
            if (ChangedAt == null)
            {
                throw new InvalidDataException("ChangedAt is a required property for GetCorporationsCorporationIdRolesHistory200Ok and cannot be null");
            }
            else
            {
                this.ChangedAt = ChangedAt;
            }
            // to ensure "CharacterId" is required (not null)
            if (CharacterId == null)
            {
                throw new InvalidDataException("CharacterId is a required property for GetCorporationsCorporationIdRolesHistory200Ok and cannot be null");
            }
            else
            {
                this.CharacterId = CharacterId;
            }
            // to ensure "IssuerId" is required (not null)
            if (IssuerId == null)
            {
                throw new InvalidDataException("IssuerId is a required property for GetCorporationsCorporationIdRolesHistory200Ok and cannot be null");
            }
            else
            {
                this.IssuerId = IssuerId;
            }
            // to ensure "NewRoles" is required (not null)
            if (NewRoles == null)
            {
                throw new InvalidDataException("NewRoles is a required property for GetCorporationsCorporationIdRolesHistory200Ok and cannot be null");
            }
            else
            {
                this.NewRoles = NewRoles;
            }
            // to ensure "OldRoles" is required (not null)
            if (OldRoles == null)
            {
                throw new InvalidDataException("OldRoles is a required property for GetCorporationsCorporationIdRolesHistory200Ok and cannot be null");
            }
            else
            {
                this.OldRoles = OldRoles;
            }
            // to ensure "RoleType" is required (not null)
            if (RoleType == null)
            {
                throw new InvalidDataException("RoleType is a required property for GetCorporationsCorporationIdRolesHistory200Ok and cannot be null");
            }
            else
            {
                this.RoleType = RoleType;
            }
        }
        
        /// <summary>
        /// changed_at string
        /// </summary>
        /// <value>changed_at string</value>
        [DataMember(Name="changed_at", EmitDefaultValue=false)]
        public DateTime? ChangedAt { get; set; }

        /// <summary>
        /// The character whose roles are changed
        /// </summary>
        /// <value>The character whose roles are changed</value>
        [DataMember(Name="character_id", EmitDefaultValue=false)]
        public int? CharacterId { get; set; }

        /// <summary>
        /// ID of the character who issued this change
        /// </summary>
        /// <value>ID of the character who issued this change</value>
        [DataMember(Name="issuer_id", EmitDefaultValue=false)]
        public int? IssuerId { get; set; }




        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class GetCorporationsCorporationIdRolesHistory200Ok {\n");
            sb.Append("  ChangedAt: ").Append(ChangedAt).Append("\n");
            sb.Append("  CharacterId: ").Append(CharacterId).Append("\n");
            sb.Append("  IssuerId: ").Append(IssuerId).Append("\n");
            sb.Append("  NewRoles: ").Append(NewRoles).Append("\n");
            sb.Append("  OldRoles: ").Append(OldRoles).Append("\n");
            sb.Append("  RoleType: ").Append(RoleType).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as GetCorporationsCorporationIdRolesHistory200Ok);
        }

        /// <summary>
        /// Returns true if GetCorporationsCorporationIdRolesHistory200Ok instances are equal
        /// </summary>
        /// <param name="input">Instance of GetCorporationsCorporationIdRolesHistory200Ok to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(GetCorporationsCorporationIdRolesHistory200Ok input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ChangedAt == input.ChangedAt ||
                    (this.ChangedAt != null &&
                    this.ChangedAt.Equals(input.ChangedAt))
                ) && 
                (
                    this.CharacterId == input.CharacterId ||
                    (this.CharacterId != null &&
                    this.CharacterId.Equals(input.CharacterId))
                ) && 
                (
                    this.IssuerId == input.IssuerId ||
                    (this.IssuerId != null &&
                    this.IssuerId.Equals(input.IssuerId))
                ) && 
                (
                    this.NewRoles == input.NewRoles ||
                    (this.NewRoles != null &&
                    this.NewRoles.SequenceEqual(input.NewRoles))
                ) && 
                (
                    this.OldRoles == input.OldRoles ||
                    (this.OldRoles != null &&
                    this.OldRoles.SequenceEqual(input.OldRoles))
                ) && 
                (
                    this.RoleType == input.RoleType ||
                    (this.RoleType != null &&
                    this.RoleType.Equals(input.RoleType))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ChangedAt != null)
                    hashCode = hashCode * 59 + this.ChangedAt.GetHashCode();
                if (this.CharacterId != null)
                    hashCode = hashCode * 59 + this.CharacterId.GetHashCode();
                if (this.IssuerId != null)
                    hashCode = hashCode * 59 + this.IssuerId.GetHashCode();
                if (this.NewRoles != null)
                    hashCode = hashCode * 59 + this.NewRoles.GetHashCode();
                if (this.OldRoles != null)
                    hashCode = hashCode * 59 + this.OldRoles.GetHashCode();
                if (this.RoleType != null)
                    hashCode = hashCode * 59 + this.RoleType.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
