<Application x:Class="Hyperwave.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Hyperwave"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             Startup="Application_Startup" Exit="Application_Exit">
    <Application.Resources>

        <!--<SolidColorBrush x:Key="UnreadMailBackground" Color="#FF006A52"/>
        <SolidColorBrush x:Key="AcountBarBackground" Color="#D80D2B13"/>

        <SolidColorBrush x:Key="EditableBackgroundBrush" Color="#E5263A2A"/>
        <SolidColorBrush x:Key="EditableInnerBorderBrush" Color="#FF121B14"/>
        <SolidColorBrush x:Key="ComboDropdownBackgroundBrush" Color="#E5172319"/>
        <SolidColorBrush x:Key="EditableBorderBrush" Color="#FF3E5B44"/>
        <SolidColorBrush x:Key="ContextMenuBackgroundBrush" Color="#FF263A2A"/>

        <Color x:Key="SelectedColor" A="102" G="99" B="41" R="44"/>
        <Color x:Key="InactiveSelectedColor" A="60" G="99" B="41" R="44"/>

        <SolidColorBrush x:Key="SelectedColorBrush" Color="{StaticResource SelectedColor}"/>
        <SolidColorBrush x:Key="InactiveSelectedColorBrush" Color="{StaticResource InactiveSelectedColor}"/>
        <SolidColorBrush x:Key="ButtonMouseHoverBackgroundBrush" Color="#662C6329"/>
        <SolidColorBrush x:Key="ButtonFooterBackgroundBrush" Color="#E5354D3A"/>
        <SolidColorBrush x:Key="GridViewColumnHeaderGripperBackgroundBrush" Color="#FF162316"/>
        <SolidColorBrush x:Key="StyledListBackgroundBrush" Color="#F2071309"/>
        <SolidColorBrush x:Key="StyledListGridViewColumnHeaderBackgroundBrush" Color="#FF224023"/>

        <SolidColorBrush x:Key="WebBrowserBackgroundBrush" Color="#F2071309"/>
        <SolidColorBrush x:Key="MailHeadersBackgroundBrush" Color="#FF1F2C23"/>
        <SolidColorBrush x:Key="TextBlockForegroundBrush" Color="White"/>

        <SolidColorBrush x:Key="CharLinkTextBrush" Color="#FF719376" />
        <SolidColorBrush x:Key="InfoHeaderBorderBrush" Color="#FF394D3F"/>
        <SolidColorBrush x:Key="TabHighlightBackgroundBrush" Color="#FF224023"/>

        <BitmapImage x:Key="MainWindowBackground" UriSource="Images/Backgrounds/Gallente.png" />

        <SolidColorBrush x:Key="ScrollBarButtonBackgroundBrush" Color="{StaticResource InactiveSelectedColor}"/>
        <SolidColorBrush x:Key="ScrollBarButtonActiveBackgroundBrush" Color="{StaticResource SelectedColor}"/>
        <SolidColorBrush x:Key="ScrollBarButtonDisabledBackgroundBrush" Color="#3A666666"/>
        <SolidColorBrush x:Key="ScrollBarGlyphBrush" Color="#444" />
        <SolidColorBrush x:Key="ProgressBarForeground" Color="#FF6F9C6F"/>
        <SolidColorBrush x:Key="TextBlockForegroundBrush" Color="White"/>-->

        

        <!--====Converters====-->
        <local:BoolToFontWeightConverter x:Key="BoolToFontWeightConverter"/>
        <local:BoolToVisiblityConverter x:Key="BoolToVisibleConverter"/>
        <local:BoolToVisiblityConverter x:Key="BoolToCollapsedConverter" Collapse="True"/>
        <local:BoolToVisiblityConverter x:Key="BoolNotToVisibleConverter" IsInverted="True"/>
        <local:BoolToVisiblityConverter x:Key="BoolNotToCollapsedConverter" Collapse="True" IsInverted="True"/>
        <local:StringToImageConverter x:Key="AbsoluteStringToImageConverter" UriType="Absolute"/>
        <local:StringToImageConverter x:Key="StringToImageConverter" UriType="Relative"/>
        <local:UriToImageConverter x:Key="UriToImageConverter"/>
        <local:IntToReadCountConverter x:Key="IntToReadCountConverter"/>
        <local:AccountStateToBrushConverter x:Key="AccountStateToBrushConverter"
                                            OfflineColor="Gray"
                                            OnlineColor="White"
                                            FailedColor="DarkRed"/>
        <local:AccountStateToVisibleConverter x:Key="AccountStateToVisibleConverter"/>
        <local:LabelTypeToImageConverter x:Key="LabelTypeToImageConverter"/>

        <local:DateTimeFormatter x:Key="DateFormatter" Display="Date"/>
        <local:DateTimeFormatter x:Key="TimeFormatter" Display="Time"/>
        <local:DateTimeFormatter x:Key="DateTimeFormatter" Display="Both"/>
        <local:BoolExpressionMultiConverter x:Key="BoolExpressionConverter"/>
        <local:BoolExpressionToVisibilityConverter x:Key="BoolExpressionToVisibilityConverter" Collapse="False"/>
        <local:BoolExpressionToVisibilityConverter x:Key="BoolExpressionToCollapsedConverter" Collapse="True"/>
        <local:ColorToBrushConverter x:Key="ColorToBrushConverter"/>
        <local:ToIntConverter x:Key="ToIntConverter"/>
        <local:BoolNegationConverter x:Key="Negate"/>

        <DataTemplate x:Key="PropertyValue_DefaultDataTemplate">
            <TextBlock Text="{Binding Value}"/>
        </DataTemplate>

        <!--====Styles====-->
        <Style TargetType="ProgressBar" x:Key="FlatProgressBar">
            <Setter Property="Background" Value="{DynamicResource EditableBackgroundBrush}"/>
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="Foreground" Value="{DynamicResource ProgressBarForeground}"/>
        </Style>
        
        <Style TargetType="Button" x:Key="FlatWindowButton">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{DynamicResource TextBlockForegroundBrush}"/>
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource ButtonMouseHoverBackgroundBrush}"/>
                    <Setter Property="BorderBrush" Value="{x:Null}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.25" />
                </Trigger>
            </Style.Triggers>
        </Style>


        <Style TargetType="Button" x:Key="FlatNotificationButton">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{DynamicResource TextBlockForegroundBrush}"/>
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource ButtonMouseHoverBackgroundBrush}"/>
                    <Setter Property="BorderBrush" Value="{x:Null}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.25" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="Button" x:Key="FlatDialogButton">
            <Setter Property="Background" Value="{DynamicResource TabHighlightBackgroundBrush}"/>
            <Setter Property="Foreground" Value="{DynamicResource TextBlockForegroundBrush}"/>
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center">
                                <ContentPresenter.ContentTemplate>
                                    <DataTemplate>
                                        <Label Content="{Binding}"/>
                                    </DataTemplate>
                                </ContentPresenter.ContentTemplate>
                            </ContentPresenter>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource ButtonMouseHoverBackgroundBrush}"/>
                    <Setter Property="BorderBrush" Value="{x:Null}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.25" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="Button" x:Key="FooterButton">
            <Setter Property="Background" Value="{DynamicResource ButtonFooterBackgroundBrush}"/>
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource ButtonMouseHoverBackgroundBrush}"/>
                    <Setter Property="BorderBrush" Value="{x:Null}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.25" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="Button" x:Key="AttachedButton">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="Opacity" Value="0.5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Opacity="{TemplateBinding Opacity}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Opacity" Value="1"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="Button" x:Key="LinkButton">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Opacity="{TemplateBinding Opacity}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="ToggleButton" x:Key="FlatWindowToggleButton">
            <Setter Property="Background" Value="{x:Null}"/>
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource ButtonMouseHoverBackgroundBrush}"/>
                    <Setter Property="BorderBrush" Value="{x:Null}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.25" />
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Background" Value="{DynamicResource ButtonMouseHoverBackgroundBrush}"/>
                    <Setter Property="BorderBrush" Value="{x:Null}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="FlatDialogCheckBox" TargetType="CheckBox">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Foreground" Value="{DynamicResource TextBlockForegroundBrush}"/>
            <!--<Setter Property="FocusVisualStyle" Value="{StaticResource CheckBoxFocusVisual}"/>-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <BulletDecorator Background="Transparent" VerticalAlignment="Center">
                            <BulletDecorator.Bullet>
                                <Border x:Name="Border"  
                                  Width="13" 
                                  Height="13" 
                                  CornerRadius="0" 
                                  Background="{DynamicResource EditableBackgroundBrush}">
                                    <Path 
                                        Width="7" Height="7" 
                                        x:Name="CheckMark"
                                        SnapsToDevicePixels="False" 
                                        Stroke="{DynamicResource TextBlockForegroundBrush}"
                                        StrokeThickness="2"
                                        Data="M 0 0 L 7 7 M 0 7 L 7 0" />
                                </Border>
                            </BulletDecorator.Bullet>
                            <ContentPresenter Margin="4,0,0,0"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Left"
                                RecognizesAccessKey="True"/>
                        </BulletDecorator>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="false">
                                <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter TargetName="CheckMark" Property="Data" Value="M 0 7 L 7 0" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="{DynamicResource TabHighlightBackgroundBrush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="Border" Property="BorderBrush" Value="Gray" />
                                <Setter Property="Foreground" Value="Gray"/>
                                <Setter TargetName="CheckMark" Property="Stroke" Value="Gray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border 
                            Name="Border"
                            Margin="1" 
                            Background="{DynamicResource ScrollBarButtonBackgroundBrush}"
                            BorderBrush="{x:Null}"
                            BorderThickness="1">
                            <Path 
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Fill="{DynamicResource ScrollBarGlyphBrush}"
                                Data="{Binding Path=Content,RelativeSource={RelativeSource TemplatedParent}}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="{DynamicResource ScrollBarButtonActiveBackgroundBrush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource ScrollBarButtonDisabledBackgroundBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="Transparent" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border  
                              Background="{DynamicResource ScrollBarButtonBackgroundBrush}"
                              BorderBrush="{x:Null}"
                              BorderThickness="1" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
            <Grid >
                <Grid.RowDefinitions>
                    <RowDefinition MaxHeight="18"/>
                    <RowDefinition Height="0.00001*"/>
                    <RowDefinition MaxHeight="18"/>
                </Grid.RowDefinitions>
                <Border
                          Grid.RowSpan="3"
                          CornerRadius="2" 
                          Background="{TemplateBinding Background}" />
                <RepeatButton 
                          Grid.Row="0"                           
                          Style="{StaticResource ScrollBarLineButton}"
                          Height="18"
                          Command="ScrollBar.LineUpCommand"
                          Content="M 0 4 L 8 4 L 4 0 Z" />
                <Track 
                            Name="PART_Track"
                            Grid.Row="1"
                            IsDirectionReversed="true">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton 
                                  Style="{StaticResource ScrollBarPageButton}"
                                  Command="ScrollBar.PageUpCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{DynamicResource ScrollBarThumb}" 
                            Margin="1,0,1,0"/>
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton 
                          Style="{StaticResource ScrollBarPageButton}"
                          Command="ScrollBar.PageDownCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton 
                  Grid.Row="3" 
                  Style="{StaticResource ScrollBarLineButton}"
                  Height="18"
                  Command="ScrollBar.LineDownCommand"
                  Content="M 0 0 L 4 4 L 8 0 Z"/>
            </Grid>
        </ControlTemplate>

        <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
            <Grid >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MaxWidth="18"/>
                    <ColumnDefinition Width="0.00001*"/>
                    <ColumnDefinition MaxWidth="18"/>
                </Grid.ColumnDefinitions>
                <Border
                  Grid.ColumnSpan="3"
                  CornerRadius="2" 
                  Background="{TemplateBinding Background}" />
                <RepeatButton 
                  Grid.Column="0"                           
                  Style="{StaticResource ScrollBarLineButton}"
                  Width="18"
                  Command="ScrollBar.LineLeftCommand"
                  Content="M 4 0 L 4 8 L 0 4 Z" />
                <Track 
                  Name="PART_Track"
                  Grid.Column="1"
                  IsDirectionReversed="False">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton 
                          Style="{StaticResource ScrollBarPageButton}"
                          Command="ScrollBar.PageLeftCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb 
                          Style="{StaticResource ScrollBarThumb}" 
                          Margin="0,1,0,1" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton 
                          Style="{StaticResource ScrollBarPageButton}"
                          Command="ScrollBar.PageRightCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton 
                  Grid.Column="3" 
                  Style="{StaticResource ScrollBarLineButton}"
                  Width="18"
                  Command="ScrollBar.LineRightCommand"
                  Content="M 0 0 L 4 4 L 0 8 Z"/>
            </Grid>
        </ControlTemplate>

        <Style x:Key="FlatScrollbar" TargetType="{x:Type ScrollBar}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Width" Value="Auto"/>
                    <Setter Property="Height" Value="18" />
                    <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
                </Trigger>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Width" Value="18"/>
                    <Setter Property="Height" Value="Auto" />
                    <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type Button}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border
                    x:Name="Border" 
                    Grid.Column="1"
                    CornerRadius="0"
                    Background="Transparent"
                    BorderBrush="{DynamicResource EditableInnerBorderBrush}"
                    BorderThickness="1,0,0,0"
                    />
                <Border 
                    Grid.Column="0"
                    Grid.ColumnSpan="2"
                    CornerRadius="0" 
                    Margin="1" 
                    Background="Transparent"
                    />
                <Path 
                    x:Name="Arrow"
                    Grid.Column="1"     
                    Fill="{TemplateBinding Foreground}"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                    />
            </Grid>
        </ControlTemplate>

        <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
            <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
        </ControlTemplate>

        <Style TargetType="{x:Type ComboBoxItem}" x:Key="FlatWindowComboBoxItem">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="Foreground" Value="{DynamicResource TextBlockForegroundBrush}"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border Name="Border"
                                  Padding="2"
                                  SnapsToDevicePixels="true" Background="Transparent">
                            <ContentPresenter />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter TargetName="Border" Property="Background">
                                    <Setter.Value>
                                        <SolidColorBrush Color="{DynamicResource SelectedColor}"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" Value="0.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type ComboBox}" x:Key="FlatWindowComboBox">
            <Style.Resources>

            </Style.Resources>
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="MinWidth" Value="120"/>
            <Setter Property="MinHeight" Value="20"/>
            <Setter Property="ItemContainerStyle" Value="{StaticResource FlatWindowComboBoxItem}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid Background="{DynamicResource EditableBackgroundBrush}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="auto"/>
                            </Grid.ColumnDefinitions>
                            <Button
                                        Grid.Column="2" 
                                        Template="{StaticResource ComboBoxToggleButton}"
                                        Focusable="false"
                                        Foreground="White"
                                        ClickMode="Press" Style="{x:Null}"
                                        Name="ButtonIcon"/>
                            <ToggleButton 
                                        Name="ToggleButton" 
                                        Grid.ColumnSpan="2" 
                                        IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                                        ClickMode="Press" Style="{x:Null}"
                                        Focusable="{TemplateBinding Focusable}">
                                <ToggleButton.Template>
                                    <ControlTemplate TargetType="ToggleButton">
                                        <Grid>
                                            <Border BorderBrush="Cyan" BorderThickness="0" Background="Transparent">
                                            </Border>
                                        </Grid>
                                    </ControlTemplate>
                                </ToggleButton.Template>
                            </ToggleButton>
                            <ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}"
                                        ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                        ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                        Margin="3,3,23,3"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Left" />
                            <TextBox x:Name="PART_EditableTextBox"
                                        Style="{x:Null}" 
                                        Template="{StaticResource ComboBoxTextBox}" 
                                        HorizontalAlignment="Left" 
                                        VerticalAlignment="Center" 
                                        Margin="3,3,23,3"
                                        Focusable="True" 
                                        Background="Transparent"
                                        Foreground="{DynamicResource TextBlockForegroundBrush}"
                                        Visibility="Hidden"
                                        IsReadOnly="{TemplateBinding IsReadOnly}"/>

                            <Popup 
                                        Name="Popup"
                                        Placement="Bottom"
                                        IsOpen="{TemplateBinding IsDropDownOpen}"
                                        AllowsTransparency="True" 
                                        Focusable="False"
                                        PopupAnimation="Slide">

                                <Grid Name="DropDown"
                                            SnapsToDevicePixels="True"                
                                            MinWidth="{TemplateBinding ActualWidth}"
                                            MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border 
                                                x:Name="DropDownBorder"
                                                Background="{DynamicResource ComboDropdownBackgroundBrush}"
                                                BorderThickness="1"
                                                BorderBrush="Transparent"/>
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" Value="0.5"/>
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </Trigger>
                            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                                <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                                <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                            </Trigger>
                            <Trigger Property="IsEditable"  Value="true">
                                <Setter Property="IsTabStop" Value="false"/>
                                <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type ComboBox}" x:Key="SmallFlatWindowComboBox" BasedOn="{StaticResource FlatWindowComboBox}">
            <Setter Property="MinHeight" Value="0"/>
            <Setter Property="MinWidth" Value="0"/>
        </Style>

        <Style TargetType="TextBox" x:Key="FlatTextBox">
            <Setter Property="Background" Value="{DynamicResource EditableBackgroundBrush}"/>
            <Setter Property="Foreground" Value="{DynamicResource TextBlockForegroundBrush}"/>
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="BorderThickness" Value="0"/>
                    
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.5"/>
                </Trigger>
                <Trigger Property="IsReadOnly" Value="True">
                    <Setter Property="Opacity" Value="0.5"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="TextBox" BasedOn="{StaticResource FlatTextBox}" x:Key="InlineTextBox">
            <Setter Property="BorderBrush" Value="{StaticResource EditableBorderBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
        </Style>

        <Style TargetType="TextBox" x:Key="SelectableTextBlock">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{DynamicResource TextBlockForegroundBrush}"/>
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="IsReadOnly" Value="True"/>
        </Style>

            <Style TargetType="ContextMenu" x:Key="FlatWindowContextMenu">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
            <Setter Property="HasDropShadow" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ContextMenu">
                        <Border 
                            Name="Border"
                            Background="{DynamicResource ContextMenuBackgroundBrush}"
                            BorderBrush="{DynamicResource MailHeadersBackgroundBrush}"
                            BorderThickness="1" >
                            <StackPanel IsItemsHost="True"
                                KeyboardNavigation.DirectionalNavigation="Cycle"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasDropShadow" Value="true">
                                <Setter TargetName="Border" Property="Padding" Value="0,3,0,3"/>
                                <Setter TargetName="Border" Property="CornerRadius" Value="0"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Resources>

                <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />


                <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}"
                    TargetType="Separator">
                    <Setter Property="Height" Value="1"/>
                    <Setter Property="Margin" Value="0,4,0,4"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Separator">
                                <Border BorderBrush="{DynamicResource InfoHeaderBorderBrush}"
                                    BorderThickness="1"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>


                <!-- SubmenuItem -->

                <ControlTemplate 
                      x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" 
                      TargetType="MenuItem">
                    <Border Name="Border" >
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
                                <ColumnDefinition Width="13"/>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter 
                                Name="Icon"
                                Margin="6,0,6,0"
                                VerticalAlignment="Center"
                                ContentSource="Icon"/>
                            <Border 
                                Name="Check"  
                                Width="13" Height="13" 
                                Visibility="Collapsed"
                                Margin="6,0,6,0" 
                                Background="{x:Null}"
                                BorderThickness="1"
                                BorderBrush="Red">
                                <Path 
                                  Name="CheckMark"
                                  Width="7" Height="7" 
                                  Visibility="Hidden" 
                                  SnapsToDevicePixels="False" 
                                  Stroke="{DynamicResource TextBlockForegroundBrush}"
                                  StrokeThickness="2"
                                  Data="M 0 0 L 7 7 M 0 7 L 7 0" />
                            </Border>
                            <ContentPresenter 
                                Name="HeaderHost"
                                Grid.Column="1"
                                ContentSource="Header"
                                VerticalAlignment="Center"
                                RecognizesAccessKey="True"/>
                            <TextBlock x:Name="InputGestureText"
                                Grid.Column="2"
                                Text="{TemplateBinding InputGestureText}"
                                Margin="5,2,0,2"
                                VerticalAlignment="Center"
                                DockPanel.Dock="Right" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsCheckable" Value="true">
                            <Setter TargetName="Check" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="Border" Property="Background"
                                Value="{DynamicResource SelectedColorBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>

                <!-- SubmenuHeader -->

                <ControlTemplate 
                  x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}" 
                  TargetType="MenuItem">
                    <Border Name="Border" >
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
                                <ColumnDefinition Width="13"/>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter 
                                Name="Icon"
                                Margin="6,0,6,0"
                                VerticalAlignment="Center"
                                ContentSource="Icon"/>
                            <ContentPresenter 
                                Name="HeaderHost"
                                Grid.Column="1"
                                ContentSource="Header"
                                RecognizesAccessKey="True"/>
                            <TextBlock x:Name="InputGestureText"
                                Grid.Column="2"
                                Text="{TemplateBinding InputGestureText}"
                                Margin="5,2,2,2"
                                DockPanel.Dock="Right"/>
                            <Path 
                                Grid.Column="3"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Data="M 0 0 L 0 7 L 4 3.5 Z" 
                                Fill="{DynamicResource TextBlockForegroundBrush}" />
                            <Popup 
                                Name="Popup"
                                Placement="Right"
                                HorizontalOffset="-4" 
                                IsOpen="{TemplateBinding IsSubmenuOpen}"
                                AllowsTransparency="True" 
                                Focusable="False"
                                PopupAnimation="Fade">
                                <Border 
                                  Name="SubmenuBorder"
                                  SnapsToDevicePixels="True"
                                  Background="{DynamicResource ContextMenuBackgroundBrush}"
                                  BorderBrush="{DynamicResource MailHeadersBackgroundBrush}"
                                  BorderThickness="1" >
                                    <StackPanel  
                                        IsItemsHost="True" 
                                        KeyboardNavigation.DirectionalNavigation="Cycle" />
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="Border" Property="Background"
                                Value="{DynamicResource SelectedColorBrush}"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
                            <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="0"/>
                            <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,3,0,3"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>

                <!-- MenuItem Style -->

                <Style x:Key="{x:Type MenuItem}" TargetType="MenuItem">
                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                    <Setter Property="Foreground" Value="{DynamicResource TextBlockForegroundBrush}"/>
                    <Style.Triggers>
                        <Trigger Property="Role" Value="SubmenuHeader">
                            <Setter Property="Template"
                                Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}"/>
                        </Trigger>
                        <Trigger Property="Role" Value="SubmenuItem">
                            <Setter Property="Template"
                                Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Style.Resources>
        </Style>

        <Style TargetType="Separator" x:Key="FlatSeperator">
            <Setter Property="Background" Value="{DynamicResource EditableBorderBrush}"/>
        </Style>

        <Style TargetType="GroupBox" x:Key="FlatWindowGroupBox">
            <Setter Property="Foreground" Value="{DynamicResource TextBlockForegroundBrush}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource EditableBorderBrush}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="GroupBox">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="10"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter Margin="4" Grid.Row="0" Grid.Column="1" Grid.RowSpan="2"
                                ContentSource="Header"
                                RecognizesAccessKey="True" />
                            <Border Grid.Row="1" Grid.Column="0"
                                BorderThickness="1,1,0,0"
                                BorderBrush="{DynamicResource EditableBorderBrush}"></Border>
                            <Border Grid.Row="1" Grid.Column="2"
                                BorderThickness="0,1,1,0"
                                BorderBrush="{DynamicResource EditableBorderBrush}"></Border>
                            <Border Grid.Row="2" Grid.ColumnSpan="3"
                                BorderThickness="1,0,1,1"
                                BorderBrush="{DynamicResource EditableBorderBrush}">
                                <ContentPresenter Margin="4" />
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="FlatScrollViewer"  TargetType="{x:Type ScrollViewer}">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Border Grid.Column="0" BorderThickness="0,1,1,1">
                                <Border.BorderBrush>
                                    <SolidColorBrush Color="{DynamicResource BorderMediumColor}" />
                                </Border.BorderBrush>
                                <ScrollContentPresenter />
                            </Border>
                            <ScrollBar x:Name="PART_VerticalScrollBar"
                                 Value="{TemplateBinding VerticalOffset}"
                                 Maximum="{TemplateBinding ScrollableHeight}"
                                 ViewportSize="{TemplateBinding ViewportHeight}"
                                 Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"                                 
                                 Grid.Row="0"
                                 Grid.Column="1"/>
                            
                            <ScrollBar x:Name="PART_HorizontalScrollBar"
                                 Orientation="Horizontal"
                                 Grid.Row="1"
                                 Grid.Column="0"
                                 Value="{TemplateBinding HorizontalOffset}"
                                 Maximum="{TemplateBinding ScrollableWidth}"
                                 ViewportSize="{TemplateBinding ViewportWidth}"
                                 Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="Window" x:Key="FlatWindow">
            <Setter Property="Background">
                <Setter.Value>
                    <ImageBrush ImageSource="{DynamicResource MainWindowBackground}" TileMode="FlipXY" Stretch="None"/>
                </Setter.Value>
            </Setter>
            <Style.Resources>
                <Style TargetType="ProgressBar" BasedOn="{StaticResource FlatProgressBar}"></Style>
                <Style TargetType="Separator" BasedOn="{StaticResource FlatSeperator}"></Style>
                <Style TargetType="GroupBox" BasedOn="{StaticResource FlatWindowGroupBox}"></Style>                
                <Style TargetType="ContextMenu" BasedOn="{StaticResource FlatWindowContextMenu}">
                </Style>
                <Style TargetType="TabControl">
                    <Setter Property="Background" Value="{DynamicResource StyledListBackgroundBrush}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="TabControl">
                                <Grid KeyboardNavigation.TabNavigation="Local">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    <TabPanel 
                                        Name="HeaderPanel"
                                        Grid.Row="0"
                                        Panel.ZIndex="1" 
                                        Margin="0,0,4,0" 
                                        IsItemsHost="True"
                                        KeyboardNavigation.TabIndex="1"
                                        Background="Transparent" />
                                    <Border 
                                        Name="Border" 
                                        Grid.Row="1" 
                                        Background="{TemplateBinding Background}" 
                                        BorderBrush="{DynamicResource InfoHeaderBorderBrush}" 
                                        BorderThickness="0,1,0,0" 
                                        CornerRadius="2" 
                                        KeyboardNavigation.TabNavigation="Local"
                                        KeyboardNavigation.DirectionalNavigation="Contained"
                                        KeyboardNavigation.TabIndex="2" >

                                        <ContentPresenter 
                                          Name="PART_SelectedContentHost"
                                          Margin="4"
                                          ContentSource="SelectedContent" />
                                    </Border>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <Style TargetType="TabItem">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="TabItem">
                                <Grid Name="Panel">
                                    <ContentPresenter x:Name="ContentSite"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center"
                                        ContentSource="Header"
                                        Margin="10,2" TextElement.Foreground="{DynamicResource TextBlockForegroundBrush}"/>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter TargetName="Panel" Property="Background" Value="{DynamicResource TabHighlightBackgroundBrush}" />
                                        <Setter TargetName="Panel" Property="TextElement.FontWeight" Value="Bold"/>
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="False">
                                        <Setter TargetName="Panel" Property="Background" Value="{x:Null}" />
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter TargetName="Panel" Property="Opacity" Value="0.5"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>

                        </Setter.Value>
                    </Setter>
                </Style>

                <Style TargetType="ScrollBar" BasedOn="{StaticResource FlatScrollbar}"/>

                <Style TargetType="Button" BasedOn="{StaticResource FlatWindowButton}">
                </Style>

                <Style TargetType="ToggleButton" BasedOn="{StaticResource FlatWindowToggleButton}">

                </Style>

                <Style x:Key="GridViewColumnHeaderGripper"
       TargetType="Thumb">
                    <Setter Property="Width"
          Value="18" />
                    <Setter Property="Background" Value="{DynamicResource GridViewColumnHeaderGripperBackgroundBrush}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Thumb}">
                                <Border Padding="{TemplateBinding Padding}"
                Background="Transparent">
                                    <Rectangle HorizontalAlignment="Center"
                     Width="1"
                     Fill="{TemplateBinding Background}" />
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="BorderBrush">
                        <Setter.Value>
                            <LinearGradientBrush EndPoint="0.5,1"
                           StartPoint="0.5,0">
                                <GradientStop Color="Black"
                      Offset="0" />
                                <GradientStop Color="White"
                      Offset="1" />
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                </Style>

                <Style TargetType="ListViewItem" x:Key="StyledListItem">
                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="Padding" Value="3"/>
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                <Border x:Name="Bd" BorderBrush="{x:Null}" 
                                BorderThickness="0" 
                                Background="{TemplateBinding Background}" 
                                Padding="{TemplateBinding Padding}"
                                SnapsToDevicePixels="true">
                                    <GridViewRowPresenter 
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true" />
                                <Condition Property="Selector.IsSelectionActive" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource SelectedColorBrush}" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true" />
                                <Condition Property="Selector.IsSelectionActive" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource InactiveSelectedColorBrush}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true"/>
                                <Condition Property="IsSelected" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource InactiveSelectedColorBrush}" />
                        </MultiTrigger>

                    </Style.Triggers>
                </Style>

                <Style TargetType="ListView">
                    <Setter Property="Background" Value="{DynamicResource StyledListBackgroundBrush}"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="BorderBrush" Value="{x:Null}"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="FontSize" Value="16"/>
                    <Setter Property="ItemContainerStyle" Value="{StaticResource StyledListItem}"/>
                    <Style.Triggers>
                    </Style.Triggers>
                    <Style.Resources>
                        <Style TargetType="GridViewColumnHeader">
                            <Setter Property="Background" Value="{DynamicResource StyledListGridViewColumnHeaderBackgroundBrush}"/>
                            <Setter Property="BorderBrush" Value="Transparent"/>
                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                                        <Grid>
                                            <Border BorderThickness="0,0,0,1" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" Padding="5,5,3,3">
                                                <!--<TextBlock x:Name="ContentHeader" Text="{TemplateBinding Content}" Padding="5,5,5,0" Width="{TemplateBinding Width}" TextAlignment="Center" />-->
                                                <ContentPresenter x:Name="ContentHeader" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Width="{TemplateBinding Width}" HorizontalAlignment="Center" VerticalAlignment="Stretch"/>
                                            </Border>
                                            <Thumb 
                                    x:Name="PART_HeaderGripper"
                                    HorizontalAlignment="Right"
                                    Margin="0,0,-9,0"
                                    Style="{StaticResource GridViewColumnHeaderGripper}" />
                                        </Grid>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Resources>
                            </Style.Resources>
                        </Style>
                    </Style.Resources>
                </Style>

                <Style TargetType="TextBlock">
                    <Setter Property="Foreground" Value="{DynamicResource TextBlockForegroundBrush}"/>
                </Style>

                <Style TargetType="Label">
                    <Setter Property="Foreground" Value="{DynamicResource TextBlockForegroundBrush}"/>
                </Style>

                <Style TargetType="ComboBox" BasedOn="{StaticResource FlatWindowComboBox}"></Style>
                <Style TargetType="TextBox" BasedOn="{StaticResource FlatTextBox}"></Style>

            </Style.Resources>
        </Style>

        <Style TargetType="Button" x:Key="LargeFlatWindowButton" BasedOn="{StaticResource FlatWindowButton}">
            <Style.Resources>
                <Style TargetType="TextBlock">
                    <Setter Property="Foreground" Value="{DynamicResource TextBlockForegroundBrush}"/>
                    <Setter Property="FontSize" Value="21.333"/>
                </Style>
            </Style.Resources>
        </Style>

        <Style TargetType="Button" x:Key="MediumFlatWindowButton" BasedOn="{StaticResource FlatWindowButton}">
            <Style.Resources>
                <Style TargetType="StackPanel">
                    <Setter Property="Orientation" Value="Horizontal"/>
                    <Setter Property="Margin" Value="4"/>
                </Style>
                <Style TargetType="TextBlock">
                    <Setter Property="VerticalAlignment" Value="Center"/>
                    <Setter Property="Foreground" Value="{DynamicResource TextBlockForegroundBrush}"/>
                    <Setter Property="FontSize" Value="16"/>
                    <Setter Property="Margin" Value="4,0,10,0"/>
                </Style>
                <Style TargetType="Image">
                    <Setter Property="VerticalAlignment" Value="Center"/>
                    <Setter Property="Width" Value="32"/>
                    <Setter Property="Height" Value="32"/>
                </Style>
            </Style.Resources>
        </Style>

        <Style TargetType="ToggleButton" x:Key="MediumFlatWindowToggleButton" BasedOn="{StaticResource FlatWindowToggleButton}">
            <Style.Resources>
                <Style TargetType="StackPanel">
                    <Setter Property="Orientation" Value="Horizontal"/>
                    <Setter Property="Margin" Value="4"/>
                </Style>
                <Style TargetType="TextBlock">
                    <Setter Property="VerticalAlignment" Value="Center"/>
                    <Setter Property="Foreground" Value="{DynamicResource TextBlockForegroundBrush}"/>
                    <Setter Property="FontSize" Value="16"/>
                    <Setter Property="Margin" Value="4,0,10,0"/>
                </Style>
                <Style TargetType="Image">
                    <Setter Property="VerticalAlignment" Value="Center"/>
                    <Setter Property="Width" Value="32"/>
                    <Setter Property="Height" Value="32"/>
                </Style>
            </Style.Resources>
        </Style>

        <Style TargetType="Popup" x:Key="DropdownMenu">
            <Style.Resources>
                <Style TargetType="StackPanel">
                    <Style.Triggers>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter Property="Margin" Value="5"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
                <Style TargetType="Button" BasedOn="{StaticResource FlatWindowButton}">
                    <Setter Property="HorizontalAlignment" Value="Left"/>
                    <Style.Resources>
                        <Style TargetType="StackPanel">
                            <Setter Property="Margin" Value="2,5,2,10"/>
                        </Style>
                    </Style.Resources>
                </Style>
                <Style TargetType="TextBlock">
                    <Setter Property="Foreground" Value="{DynamicResource TextBlockForegroundBrush}"/>
                    <Setter Property="Margin" Value="5,0,0,0"/>
                    <Setter Property="VerticalAlignment" Value="Center"/>
                    <Setter Property="FontSize" Value="16"/>
                </Style>
            </Style.Resources>
        </Style>

        <Style TargetType="WrapPanel" x:Key="FromBox">
            <Setter Property="Background" Value="{DynamicResource EditableBackgroundBrush}"/>
        </Style>

        <Style TargetType="Grid" x:Key="MailHeaders">
            <Setter Property="Background" Value="{DynamicResource MailHeadersBackgroundBrush}"/>
            <Style.Resources>
                <Style TargetType="TextBlock">
                    <Setter Property="Foreground" Value="{DynamicResource TextBlockForegroundBrush}"/>
                    <Setter Property="FontSize" Value="16"/>
                </Style>
            </Style.Resources>
        </Style>

        <Style x:Key="LoadingPlaque" TargetType="StackPanel">
            <Setter Property="Background" Value="{DynamicResource AcountBarBackground}"/>
        </Style>

        <Style TargetType="Border" x:Key="InfoHeader">
            <Setter Property="BorderBrush" Value="{DynamicResource InfoHeaderBorderBrush}"/>
            <Setter Property="BorderThickness" Value="1,1,1,1"/>
            <Style.Resources>
                <Style TargetType="DockPanel">
                    <Setter Property="Background" Value="{DynamicResource MailHeadersBackgroundBrush}"/>
                    <Style.Resources>
                        <Style TargetType="TextBlock">
                            <Setter Property="Foreground" Value="{DynamicResource TextBlockForegroundBrush}"/>
                        </Style>
                    </Style.Resources>
                </Style>


            </Style.Resources>
        </Style>

        <Style TargetType="StackPanel" x:Key="LinkPanel">
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Orientation" Value="Horizontal"/>
            <Style.Resources>
                <Style TargetType="Image">
                    <Setter Property="Margin" Value="0,0,3,0"/>
                </Style>
                <Style TargetType="TextBlock">
                    <Setter Property="Foreground" Value="{DynamicResource TextBlockForegroundBrush}"/>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource CharLinkTextBrush}"/>
                            <Setter Property="TextDecorations" Value="Underline"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Style.Resources>
        </Style>

        <Style TargetType="StackPanel" x:Key="ErrorLinkPanel">
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Orientation" Value="Horizontal"/>
            <Style.Resources>
                <Style TargetType="Image">
                    <Setter Property="Margin" Value="0,0,3,0"/>
                </Style>
                <Style TargetType="TextBlock">
                    <Setter Property="Foreground" Value="DarkRed"/>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource CharLinkTextBrush}"/>
                            <Setter Property="TextDecorations" Value="Underline"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Style.Resources>
        </Style>


        <!--====Scrollbars====-->



    </Application.Resources>
</Application>
 